// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AlertChannelsColumns holds the columns for the "alert_channels" table.
	AlertChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 50},
		{Name: "alert_channel_type", Type: field.TypeString},
		{Name: "config", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AlertChannelsTable holds the schema information for the "alert_channels" table.
	AlertChannelsTable = &schema.Table{
		Name:       "alert_channels",
		Columns:    AlertChannelsColumns,
		PrimaryKey: []*schema.Column{AlertChannelsColumns[0]},
	}
	// MonitorsColumns holds the columns for the "monitors" table.
	MonitorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 50},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "current_down_reason", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeString},
		{Name: "last_checked_at", Type: field.TypeTime, Nullable: true},
		{Name: "status_last_changed_at", Type: field.TypeTime},
		{Name: "monitor_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "config", Type: field.TypeJSON},
		{Name: "interval_seconds", Type: field.TypeInt, Default: 60},
		{Name: "paused", Type: field.TypeBool, Default: false},
		{Name: "failure_count", Type: field.TypeInt, Default: 0},
		{Name: "success_count", Type: field.TypeInt, Default: 0},
		{Name: "success_threshold", Type: field.TypeInt, Default: 1},
		{Name: "failure_threshold", Type: field.TypeInt, Default: 1},
		{Name: "tags", Type: field.TypeJSON, Nullable: true},
		{Name: "silenced", Type: field.TypeBool, Default: false},
	}
	// MonitorsTable holds the schema information for the "monitors" table.
	MonitorsTable = &schema.Table{
		Name:       "monitors",
		Columns:    MonitorsColumns,
		PrimaryKey: []*schema.Column{MonitorsColumns[0]},
	}
	// SecretsColumns holds the columns for the "secrets" table.
	SecretsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 50},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString, Default: ""},
		{Name: "value", Type: field.TypeString, Size: 3000},
	}
	// SecretsTable holds the schema information for the "secrets" table.
	SecretsTable = &schema.Table{
		Name:       "secrets",
		Columns:    SecretsColumns,
		PrimaryKey: []*schema.Column{SecretsColumns[0]},
	}
	// SinksColumns holds the columns for the "sinks" table.
	SinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 50},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sink_type", Type: field.TypeString, Size: 150},
		{Name: "config", Type: field.TypeJSON},
	}
	// SinksTable holds the schema information for the "sinks" table.
	SinksTable = &schema.Table{
		Name:       "sinks",
		Columns:    SinksColumns,
		PrimaryKey: []*schema.Column{SinksColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Size: 50},
		{Name: "api_key", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "role", Type: field.TypeString, Default: "read_only"},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "locked_until", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// AlertChannelMonitorsColumns holds the columns for the "alert_channel_monitors" table.
	AlertChannelMonitorsColumns = []*schema.Column{
		{Name: "alert_channel_id", Type: field.TypeString, Size: 50},
		{Name: "monitor_id", Type: field.TypeString, Size: 50},
	}
	// AlertChannelMonitorsTable holds the schema information for the "alert_channel_monitors" table.
	AlertChannelMonitorsTable = &schema.Table{
		Name:       "alert_channel_monitors",
		Columns:    AlertChannelMonitorsColumns,
		PrimaryKey: []*schema.Column{AlertChannelMonitorsColumns[0], AlertChannelMonitorsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "alert_channel_monitors_alert_channel_id",
				Columns:    []*schema.Column{AlertChannelMonitorsColumns[0]},
				RefColumns: []*schema.Column{AlertChannelsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "alert_channel_monitors_monitor_id",
				Columns:    []*schema.Column{AlertChannelMonitorsColumns[1]},
				RefColumns: []*schema.Column{MonitorsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AlertChannelsTable,
		MonitorsTable,
		SecretsTable,
		SinksTable,
		UsersTable,
		AlertChannelMonitorsTable,
	}
)

func init() {
	AlertChannelMonitorsTable.ForeignKeys[0].RefTable = AlertChannelsTable
	AlertChannelMonitorsTable.ForeignKeys[1].RefTable = MonitorsTable
}
